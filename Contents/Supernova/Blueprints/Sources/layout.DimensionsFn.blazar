{* param node: FlexboxNode *}
{* return dict: ["apply": bool] if dimensions needs to be applied to this node *}
{[ var n @new.dict() /]}
{[ if @is.nonNil(self.node) ]} 
  {[ set n node /]}
{[ else ]}
  {* this branch allows standalone execution in editor *}
  {[ var layout @compute.layout.flexboxForScreenById(screenId) /]}
  {[ set n layout.children.at(0) /]}
{[/]}

{[ var d n.dimensions /]}
{[ var applyDimensions @not(@and(@is.equals(d.height.type, "wrapContent"), @is.equals(d.width.type, "wrapContent"))) /]}

{[ if applyDimensions ]}
  {[ if @or(@is.equals(d.width.type, "stretched"), @is.equals(d.height.type, "stretched")) ]}
constraints: BoxConstraints.expand( 
    {[ inject "ui.WidthHeight" context d /]} 
),
  {[ else ]}
    {[ inject "ui.WidthHeight" context d /]}
  {[/]}
{[/]}

{[ return @new.dict("apply", applyDimensions) /]}