{[ let component @project.componentById(componentId) /]}

onPressed: () => this.{{component.naming.action}}(context),
{[ let style component.style /]}
{[ let animation @project.animationByComponentId(componentId) /]}
{[ let decorationContext @new.dict("style", style).add("animation", animation) /]}
{[ let background @call("ui.decoration.BackgroundColor", decorationContext) /]}
{[ let borderWidth @call("ui.decoration.BorderWidth", decorationContext) /]}
{[ let borderColor @call("ui.decoration.BorderColor", decorationContext) /]}
{[ let border @new.dict("apply", @and(borderWidth.apply, borderColor.apply)) /]}
{[ let radius @call("ui.decoration.CornerRadius", decorationContext) /]}
{[ let fix 1 /]}
{[ if background.apply ]}
color: {{ background.output }},
{[/]}

{[ if @is.nonNil(style.text.color) ]}
textColor: {[ inject "ui.Color" context style.text.color /]},
{[/]}

{[if @or(border.apply, radius.apply) ]}
shape: RoundedRectangleBorder(
 {[ if border.apply ]}
   side: BorderSide(
      color: {{ borderColor.output }},
      width: {{ borderWidth.output }},
      style: BorderStyle.solid,
   ),
 {[/]}
 {[if radius.apply ]}
   borderRadius: {{ radius.output }},
 {[/]}
),
{[/]}

padding: {[ inject "ui.Insets" context style.padding /]},
child: {[ inject "components.ButtonContent" context self /]},