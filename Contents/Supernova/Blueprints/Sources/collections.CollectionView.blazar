 
{[var component @project.componentById(componentId) /]}
{[var children @project.containerByIdChildren(componentId) /]}
{[var names @compute.support.uniqueNames(@map(children, "name"), "words", " ") /]}
{[var firstChildName "ChildWidget" /]}
{[ var isHorizontal component.style.isHorizontal /]}

{[ var maxCrossAxisExtent 0 /]}
{[ var maxAxisSize 0 /]}
{[ var crossAxisExtentBase @iif(isHorizontal, component.layout.frame.height, component.layout.frame.width) /]}

{[for tuple in @compute.support.zipWithIndex(names)]}
 {[var childName tuple.value.camelcased(true).suffixed("ItemWidget") /]}
 {[if @is.equals(tuple.key, 0)]} 
   {[set firstChildName childName /]}
 {[/]}

 {[ var child @project.componentById(children.at(tuple.key).id) /]} 
 {[ if @and(isHorizontal, @is.gt(child.layout.frame.height, maxCrossAxisExtent)) ]}
   {[ set maxCrossAxisExtent child.layout.frame.height /]}
   {[ set maxAxisSize child.layout.frame.width /]}
 {[/]} 
 {[ if @and(@not(isHorizontal), @is.gt(child.layout.frame.width, maxCrossAxisExtent)) ]}
   {[ set maxCrossAxisExtent child.layout.frame.width /]}
   {[ set maxAxisSize child.layout.frame.height /]}
 {[/]} 

 {[var path @call("collections.CollectionItemEmitPath", @new.dict().add("childName", childName)).output /]}
 {[emit file path]}
  {[var childContext @new.dict().add("componentId", child.id).add("className", childName) /]}
  {[inject "collections.CollectionViewCell" context childContext /]}
 {[/]}
{[/]}

{[ if @is.equals(children.count(), 0) ]}
  {[ set maxCrossAxisExtent crossAxisExtentBase /]}
  {[ set maxAxisSize @iif(isHorizontal, component.layout.frame.width, component.layout.frame.height) /]}
{[/]}
{[var crossAxisExtentMultiplier crossAxisExtentBase.dividedBy(maxCrossAxisExtent).floored() /]}
{[var extent crossAxisExtentBase.dividedBy(crossAxisExtentMultiplier) /]} 
{[var ratio extent.dividedBy(maxAxisSize) /]}

GridView.builder(
    scrollDirection: Axis.{[if component.style.isHorizontal]}horizontal{[else]}vertical{[/]},
    gridDelegate: SliverGridDelegateWithMaxCrossAxisExtent(
      maxCrossAxisExtent: {{ extent.rounded(5) }},
      childAspectRatio: {{ ratio.rounded(5) }},
      mainAxisSpacing: {{component.style.cellSpacing}},
    ),
    itemBuilder: (context, index) => {{firstChildName}}(),
)